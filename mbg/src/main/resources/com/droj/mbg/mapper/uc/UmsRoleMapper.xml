<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.droj.mbg.mapper.uc.UmsRoleMapper">
    <resultMap id="BaseResultMap" type="com.droj.mbg.model.uc.UmsRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="sid" jdbcType="VARCHAR" property="sid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="checked" jdbcType="BIT" property="checked"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="admin_count" jdbcType="INTEGER" property="adminCount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="mngflg" jdbcType="INTEGER" property="mngflg"/>
        <result column="role_memo_1" jdbcType="VARCHAR" property="roleMemo1"/>
        <result column="role_memo_2" jdbcType="INTEGER" property="roleMemo2"/>
        <result column="role_memo_3" jdbcType="BIGINT" property="roleMemo3"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, sid, name, checked, description, admin_count, create_time, status, sort, mngflg,
        role_memo_1, role_memo_2, role_memo_3
    </sql>
    <select id="selectByExample" parameterType="com.droj.mbg.model.uc.UmsRoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ums_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ums_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ums_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.droj.mbg.model.uc.UmsRoleExample">
        delete from ums_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.droj.mbg.model.uc.UmsRole">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ums_role (sid, name, checked,
        description, admin_count, create_time,
        status, sort, mngflg,
        role_memo_1, role_memo_2, role_memo_3
        )
        values (#{sid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{checked,jdbcType=BIT},
        #{description,jdbcType=VARCHAR}, #{adminCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{mngflg,jdbcType=INTEGER},
        #{roleMemo1,jdbcType=VARCHAR}, #{roleMemo2,jdbcType=INTEGER}, #{roleMemo3,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.droj.mbg.model.uc.UmsRole">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ums_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="checked != null">
                checked,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="adminCount != null">
                admin_count,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="mngflg != null">
                mngflg,
            </if>
            <if test="roleMemo1 != null">
                role_memo_1,
            </if>
            <if test="roleMemo2 != null">
                role_memo_2,
            </if>
            <if test="roleMemo3 != null">
                role_memo_3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="checked != null">
                #{checked,jdbcType=BIT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="adminCount != null">
                #{adminCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="mngflg != null">
                #{mngflg,jdbcType=INTEGER},
            </if>
            <if test="roleMemo1 != null">
                #{roleMemo1,jdbcType=VARCHAR},
            </if>
            <if test="roleMemo2 != null">
                #{roleMemo2,jdbcType=INTEGER},
            </if>
            <if test="roleMemo3 != null">
                #{roleMemo3,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.droj.mbg.model.uc.UmsRoleExample" resultType="java.lang.Long">
        select count(*) from ums_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ums_role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.checked != null">
                checked = #{record.checked,jdbcType=BIT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.adminCount != null">
                admin_count = #{record.adminCount,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.mngflg != null">
                mngflg = #{record.mngflg,jdbcType=INTEGER},
            </if>
            <if test="record.roleMemo1 != null">
                role_memo_1 = #{record.roleMemo1,jdbcType=VARCHAR},
            </if>
            <if test="record.roleMemo2 != null">
                role_memo_2 = #{record.roleMemo2,jdbcType=INTEGER},
            </if>
            <if test="record.roleMemo3 != null">
                role_memo_3 = #{record.roleMemo3,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ums_role
        set id = #{record.id,jdbcType=BIGINT},
        sid = #{record.sid,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        checked = #{record.checked,jdbcType=BIT},
        description = #{record.description,jdbcType=VARCHAR},
        admin_count = #{record.adminCount,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=INTEGER},
        sort = #{record.sort,jdbcType=INTEGER},
        mngflg = #{record.mngflg,jdbcType=INTEGER},
        role_memo_1 = #{record.roleMemo1,jdbcType=VARCHAR},
        role_memo_2 = #{record.roleMemo2,jdbcType=INTEGER},
        role_memo_3 = #{record.roleMemo3,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.droj.mbg.model.uc.UmsRole">
        update ums_role
        <set>
            <if test="sid != null">
                sid = #{sid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="checked != null">
                checked = #{checked,jdbcType=BIT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="adminCount != null">
                admin_count = #{adminCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="mngflg != null">
                mngflg = #{mngflg,jdbcType=INTEGER},
            </if>
            <if test="roleMemo1 != null">
                role_memo_1 = #{roleMemo1,jdbcType=VARCHAR},
            </if>
            <if test="roleMemo2 != null">
                role_memo_2 = #{roleMemo2,jdbcType=INTEGER},
            </if>
            <if test="roleMemo3 != null">
                role_memo_3 = #{roleMemo3,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.droj.mbg.model.uc.UmsRole">
        update ums_role
        set sid = #{sid,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        checked = #{checked,jdbcType=BIT},
        description = #{description,jdbcType=VARCHAR},
        admin_count = #{adminCount,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        mngflg = #{mngflg,jdbcType=INTEGER},
        role_memo_1 = #{roleMemo1,jdbcType=VARCHAR},
        role_memo_2 = #{roleMemo2,jdbcType=INTEGER},
        role_memo_3 = #{roleMemo3,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>